import Head from 'next/head';
import styles from '../styles/Test.module.css';
import type { GetServerSideProps, NextPage } from 'next';
import sha256 from 'crypto-js/sha256';
import CryptoJS from 'crypto-js';
import { useRouter } from 'next/router';
import { useState } from 'react';
import LoginForm from '@/components/forms/LoginForm';
import RegisterForm from '@/components/forms/RegisterForm';
import getGoogleOAuthUrl from '../lib/client/getGoogleUrl';
import getFacebookUrl from '../lib/client/getFacebookUrl';
import Image from 'next/image';
import Google from '../public/GOOG-0ed88f7c.png';
import Facebook from '../public/Facebook_Logo_(2019).png.webp';

const Login: NextPage<{ code_challenge: string }> = ({ code_challenge }) => {
  const router = useRouter();
  const [serverError, setServerError] = useState<string | null>(null); // can pass setServerError as prop to both form components
  const [isLoginView, setIsLoginView] = useState<boolean>(true);

  //TODO: fix documention to include updates on the prisma scripts/commands
  //TODO: BUG fix clicking login multiple times, maybe debounce for serverside + disable button for client

  return (
    <div>
      <Head>
        <title>RemindMe</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div
          className={`bg-blueGrey-500 w-full  ${styles.wrapper} items-center overflow-auto h-screen`}
        >
          <div className="col-start-4 col-end-10 row-start-2 row-end-3  flex w-full h-full justify-center ">
            <div
              id="left"
              className="w-full flex flex-col p-3  justify-between h-[70%]"
            >
              <div className=" h-full flex flex-col justify-center pl-7">
                <div className="font-semibold text-5xl">RemindMe</div>
                <div className="text-blueGrey-200 mt-3">
                  Did you forget something?
                </div>
              </div>
              <div className=" h-full pl-7 font-medium text-lg mt-5">
                Say goodbye to belated birthday wishes and missed dentist
                appointments
              </div>
              <div className=" h-full pl-7 font-medium text-lg">
                Use RemindMe to forget about forgetting
              </div>
            </div>
            <div
              id="right"
              className={`w-full bg-blueGrey-800 border border-blueGrey-50 rounded-3xl p-5 m-3 overflow-auto shadow-blueGrey-100 shadow-md ${
                isLoginView ? 'h-[72%]' : 'h-[95%]'
              }`}
            >
              <div className="wrap p-5  flex flex-col h-full justify-between ">
                {serverError && (
                  <div id="serverError">
                    <p className="error mt-5 mb-5 text-red-500">
                      {serverError}
                    </p>
                  </div>
                )}
                <div id="formRender" className="basis-[50%]">
                  {isLoginView ? (
                    <LoginForm
                      router={router}
                      setServerError={setServerError}
                    />
                  ) : (
                    <RegisterForm
                      setServerError={setServerError}
                      setIsLoginView={setIsLoginView}
                    />
                  )}
                </div>
                <div
                  id="OAuthLogin"
                  className={` flex flex-col rounded-2xl basis-[40%]  ${
                    isLoginView ? 'pt-6' : 'pt-8'
                  }`}
                >
                  {' '}
                  <div className="relative flex  items-center mb-6">
                    <div className="flex-grow border-t border-blueGrey-400"></div>
                    <span className="flex-shrink mx-4 text-blueGrey-400">
                      {isLoginView ? 'Or Login with' : 'Or Sign up with'}
                    </span>
                    <div className="flex-grow border-t border-blueGrey-400"></div>
                  </div>
                  <div id="buttons" className=" flex ">
                    <button
                      onClick={() => router.push(getGoogleOAuthUrl())}
                      className="py-2 px-4 w-full bg-gradient-to-r from-blueGrey-500 to-blueGrey-700 hover:from-blueGrey-600 hover:to-blueGrey-800 rounded-2xl mr-3 flex justify-center"
                    >
                      <Image
                        alt="Google logo"
                        src={Google}
                        width={30}
                        height={30}
                        style={{
                          width: 'auto',
                          height: 'auto',
                          minHeight: '30px',
                          minWidth: '30px',
                        }}
                      />
                    </button>
                    <button
                      className="py-2 px-4 w-full bg-gradient-to-r from-blueGrey-500 to-blueGrey-700 hover:from-blueGrey-600 hover:to-blueGrey-800 rounded-2xl ml-3 flex justify-center"
                      onClick={() =>
                        router.push(getFacebookUrl(code_challenge))
                      }
                    >
                      <Image
                        alt="Facebook logo"
                        src={Facebook}
                        width={30}
                        height={30}
                        style={{
                          width: 'auto',
                          height: 'auto',
                          minHeight: '30px',
                          minWidth: '30px',
                        }}
                      />
                    </button>
                  </div>
                </div>
                <div id="footerText" className=" rounded-2xl text-center mt-5 ">
                  {isLoginView
                    ? 'Dont have an account? '
                    : 'Already Registered? '}
                  <span
                    className="hover:cursor-pointer text-blueGrey-300 hover:text-blueGrey-50"
                    onClick={() => setIsLoginView(!isLoginView)}
                  >
                    {isLoginView ? 'Sign up now ' : 'Login here '}
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
};

export default Login;

export const getServerSideProps: GetServerSideProps = async (context) => {
  const code_verifier = process.env.CODE_VERIFIER as string;
  const hash = sha256(code_verifier);
  const code_challenge = CryptoJS.enc.Base64url.stringify(hash);
  return {
    props: {
      code_challenge: code_challenge,
    },
  };
};
